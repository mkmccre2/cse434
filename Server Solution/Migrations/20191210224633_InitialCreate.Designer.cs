// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServerEF;

namespace ServerEF.Migrations
{
    [DbContext(typeof(SessionContext))]
    [Migration("20191210224633_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0");

            modelBuilder.Entity("ServerEF.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<int>("SessionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("ClientId");

                    b.HasIndex("SessionId")
                        .IsUnique();

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("ServerEF.Following", b =>
                {
                    b.Property<int>("FollowingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FollowingName")
                        .HasColumnType("TEXT");

                    b.HasKey("FollowingId");

                    b.HasIndex("ClientId");

                    b.ToTable("Followings");
                });

            modelBuilder.Entity("ServerEF.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .HasColumnType("TEXT");

                    b.HasKey("PostId");

                    b.HasIndex("ClientId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("ServerEF.Session", b =>
                {
                    b.Property<int>("SessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("TimeNow")
                        .HasColumnType("TEXT");

                    b.Property<int>("state")
                        .HasColumnType("INTEGER");

                    b.Property<int>("token")
                        .HasColumnType("INTEGER");

                    b.HasKey("SessionId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("ServerEF.Subscriber", b =>
                {
                    b.Property<int>("SubscriberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SubscriberName")
                        .HasColumnType("TEXT");

                    b.HasKey("SubscriberId");

                    b.HasIndex("ClientId");

                    b.ToTable("Subscribers");
                });

            modelBuilder.Entity("ServerEF.Client", b =>
                {
                    b.HasOne("ServerEF.Session", "Session")
                        .WithOne("Client")
                        .HasForeignKey("ServerEF.Client", "SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ServerEF.Following", b =>
                {
                    b.HasOne("ServerEF.Client", "Client")
                        .WithMany("Followings")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ServerEF.Post", b =>
                {
                    b.HasOne("ServerEF.Client", "Client")
                        .WithMany("Posts")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ServerEF.Subscriber", b =>
                {
                    b.HasOne("ServerEF.Client", "Client")
                        .WithMany("Subscribers")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
